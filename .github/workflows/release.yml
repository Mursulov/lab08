name: Release Packages

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  linux-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake dpkg-dev rpm
    - name: Configure project
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    - name: Build project
      run: cmake --build build --config Release --parallel $(nproc)
    - name: Create packages
      run: |
        cd build
        cpack -G TGZ
        cpack -G DEB
        cpack -G RPM
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-release-packages
        path: |
          build/*.tar.gz
          build/*.deb
          build/*.rpm

  windows-release:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup WiX
      run: |
        choco install wixtoolset -y
        echo "WIX=C:\Program Files (x86)\WiX Toolset v3.11\bin" >> $GITHUB_ENV
    - name: Prepare license
      shell: pwsh
      run: |
        if (!(Test-Path "LICENSE.rtf")) {" " | Out-File -Encoding ASCII "LICENSE.rtf"}
    - name: Configure and build
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release
    - name: Generate MSI
      run: |
        cd build
        cpack -G WIX -C Release -V --debug
    - name: Upload Windows packages
      uses: actions/upload-artifact@v4
      with:
        name: windows-release-packages
        path: build/*.msi
        if-no-files-found: warn

  macos-release:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Configure project
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    - name: Build project
      run: cmake --build build --config Release --parallel 2
    - name: Create DMG package
      run: |
        cd build
        cpack -G DragNDrop
    - name: Upload macOS packages
      uses: actions/upload-artifact@v4
      with:
        name: macos-release-packages
        path: build/*.dmg
        if-no-files-found: warn